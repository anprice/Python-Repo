#!usr/bin/python3

def show_book(book_catalog):
    title = input("Enter the title for the book: ")                             #Get user input and store in title 
    if title in book_catalog:                                                   #If title is in the book catalog
        book = book_catalog[title]                                              #Store matching key in the book variable
        print("Title:     " + title)                                            #Print title
        print("Author:    " + book["author"])                                   #Print author in book dictionary
        print("Pub year:  " + book["pubyear"])                                  #Print pubyear in book dictionary
    else:
        print("Sorry, " + title + " doesn't exist in the catalog.")
        
def add_edit_book(book_catalog, mode):                                          #Parameters passed are the book_catalog dictionary and the mode for if statement
    title = input("Enter title of the book: ")                                  #Get user input and store in title 
    if mode == "add" and title in book_catalog:                                 #if mode is add and there is a matching title based on user input
        print(title + " already exists in the catalog.")                        #Entry already exists
        response = input ("Would you like to edit it? (y/n): ").lower()         #Query if they would like to edit it
        if (response != "y"):                                                   #If yes, break from if statement block and go down to edit info
            return
    elif mode == "edit" and title not in book_catalog:                          #if mode is edit and there is not a matching title based on user info
        print(title + " doesn't exist in the catalog.")
        response = input("Would you like to add it? (y/n): ").lower()           #If yes, break from if statement block and go down to edit info
        if (response != "y"):
            return
        
    author = input("Enter author name: ")
    pubyear = input("Enter publication year: ")
    book = {"author": author, "pubyear": pubyear}
    
    book_catalog[title] = book                                                  #Adds book data to the catalog using the title as the key

def delete_book(book_catalog):
    title = input("Title: ")
    if title in book_catalog:                                                   #If the user input stored in title is in the book_catalog
        del book_catalog[title]                                                 #Delete the matching key from the book_catalog dictionary
        print(title + " removed from catalog.")
    else:
        print(title + " doesn't exist in the catalog.")
        
def display_menu():
    print("The Book Catalog program")
    print()
    print("COMMAND MENU")
    print("show - Show book info")
    print("add - Add book")
    print("edit - Edit book")
    print("del - Delete book")
    print("exit - Exit program")

def main():
    book_catalog = {                                                            #Define the nested dictionary of books
        "Moby Dick":
            {"author" : "Herman Melville",
             "pubyear" : "1851"},
        "The Hobbit":
            {"author" : "J.R.R. Tolkien",
             "pubyear" : "1937"},
        "Slaughterhouse Five":
            {"author" : "Kurt Vonnegut",
             "pubyear" : "1969"}
        }
    
    display_menu()                                                              #Call the display menu

    while True:                                                                 #Loop until user types exit
        print()
        command = input("Command: ").lower()
        if command == "show":
            show_book(book_catalog)                                             #Call the show_book function and pass book_catalog dictionary
        elif command == "add":
            add_edit_book(book_catalog, mode="add")                             #Call the add_edit_book function and pass the book_catalog dictionary setting mode argument to add
        elif command == "edit":                                                 
            add_edit_book(book_catalog, mode="edit")                            #Call the add_edit_book function and pass the book_catalog dictionary setting mode argument to edit
        elif command == "del":
            delete_book(book_catalog)                                           #Call the delete_book function and pass book_catalog dictionary
        elif command == "exit":
            print("Bye!")
            break
        else:
            print("Unknown command.  Please try again.")
        
if __name__ == "__main__":
    main()
